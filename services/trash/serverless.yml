service: toolink-api-trash

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Load our webpack config
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  timeout: 10

  apiGateway:
    restApiId:
      'Fn::ImportValue': ${self:custom.stage}-ApiGatewayRestApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${self:custom.stage}-ApiGatewayRestApiRootResourceId  

  # These environment variables are made available to our functions
  # under process.env.
  environment:
    TABLE_NAME: ${self:custom.stage}-table-links

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - 'Fn::ImportValue': ${self:custom.stage}-LinksTableArn

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: url path is /trash
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role
  list:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /trash
    # - method: GET request
    handler: src/list.main
    events:
      - http:
          path: trash
          method: get
          cors: true
          authorizer: aws_iam
  delete:
      # Defines an HTTP API endpoint that calls the main function in delete.js
      # - path: url path is /links/{id}
      # - method: DELETE request
      handler: src/delete.main
      events:
        - http:
            path: trash/{id}
            method: delete
            cors: true
            authorizer: aws_iam
  deleteAll:
      # Defines an HTTP API endpoint that calls the main function in delete.js
      # - path: url path is /trash
      # - method: DELETE request
      handler: src/deleteAll.main
      events:
        - http:
            path: trash
            method: delete
            cors: true
            authorizer: aws_iam           